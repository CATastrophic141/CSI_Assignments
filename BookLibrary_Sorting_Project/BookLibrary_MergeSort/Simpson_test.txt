As with all assignments, as code was being developped, print statements were used to verify that the code was working in specific locations,
should code break at any given point, review would take place to fix each necessary issue.
Next, to verify that the code would run for the proper amount of time, the clock methodology was used to determine the actual runtime of the program.
At the beginning of the program a clock variable was created, and another was created upon program conclusion.
To calculate the runtime given the clock variables were used to calculate the time difference, and this difference was divided by the number of clock cycles are performed for a given unit.
This resultant time was used to determine if the program ran for reasonable amounts of time for large input values
As for the testing conditions, a sub-program was developped to generate test files, consisting of a modifiable loop generating random numbers.
In test case 1, the 10^5 number of books was tested, and the resulting value was checked to be a reasonable value.
In test case 2, the 10^10 number of pages was tested, the random numbers were generated such that the limit would be hit before the end of the number of books.
		The resulting value was checked to be a reasonable value.
In test case 3, various types of inputs were validated, to ensure that the program was robust against differenet input methods.
		One such test case in this input file was designed to reach the end of the library without hitting the page limit.
In test case 4, an extremely large test case was generated to verify the reasonable limits of the program.
In test case 5, many smaller test cases were generated to test if the program did not produce errors on the presence of many test cases, and that memory allocation was performed properly